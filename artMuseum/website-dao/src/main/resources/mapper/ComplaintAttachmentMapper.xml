<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.website.dao.ComplaintAttachmentMapper">
    <resultMap id="BaseResultMap" type="com.website.pojo.ComplaintAttachment">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="attachment_name" jdbcType="VARCHAR" property="attachmentName"/>
        <result column="attachment_path" jdbcType="VARCHAR" property="attachmentPath"/>
        <result column="attachment_size" jdbcType="DECIMAL" property="attachmentSize"/>
        <result column="complaint_id" jdbcType="BIGINT" property="complaintId"/>
        <result column="complaint_type" jdbcType="TINYINT" property="complaintType"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, attachment_name, attachment_path, attachment_size, complaint_id, complaint_type, 
    gmt_create, gmt_modified
  </sql>
    <select id="selectByExample" parameterType="com.website.pojo.ComplaintAttachmentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from complaint_attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from complaint_attachment
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from complaint_attachment
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.website.pojo.ComplaintAttachmentExample">
        delete from complaint_attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.website.pojo.ComplaintAttachment">
    insert into complaint_attachment (id, attachment_name, attachment_path, 
      attachment_size, complaint_id, complaint_type, 
      gmt_create, gmt_modified)
    values (#{id,jdbcType=BIGINT}, #{attachmentName,jdbcType=VARCHAR}, #{attachmentPath,jdbcType=VARCHAR}, 
      #{attachmentSize,jdbcType=DECIMAL}, #{complaintId,jdbcType=BIGINT}, #{complaintType,jdbcType=TINYINT}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.website.pojo.ComplaintAttachment">
        insert into complaint_attachment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="attachmentName != null">
                attachment_name,
            </if>
            <if test="attachmentPath != null">
                attachment_path,
            </if>
            <if test="attachmentSize != null">
                attachment_size,
            </if>
            <if test="complaintId != null">
                complaint_id,
            </if>
            <if test="complaintType != null">
                complaint_type,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="attachmentName != null">
                #{attachmentName,jdbcType=VARCHAR},
            </if>
            <if test="attachmentPath != null">
                #{attachmentPath,jdbcType=VARCHAR},
            </if>
            <if test="attachmentSize != null">
                #{attachmentSize,jdbcType=DECIMAL},
            </if>
            <if test="complaintId != null">
                #{complaintId,jdbcType=BIGINT},
            </if>
            <if test="complaintType != null">
                #{complaintType,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.website.pojo.ComplaintAttachmentExample" resultType="java.lang.Long">
        select count(*) from complaint_attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update complaint_attachment
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.attachmentName != null">
                attachment_name = #{record.attachmentName,jdbcType=VARCHAR},
            </if>
            <if test="record.attachmentPath != null">
                attachment_path = #{record.attachmentPath,jdbcType=VARCHAR},
            </if>
            <if test="record.attachmentSize != null">
                attachment_size = #{record.attachmentSize,jdbcType=DECIMAL},
            </if>
            <if test="record.complaintId != null">
                complaint_id = #{record.complaintId,jdbcType=BIGINT},
            </if>
            <if test="record.complaintType != null">
                complaint_type = #{record.complaintType,jdbcType=TINYINT},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update complaint_attachment
        set id = #{record.id,jdbcType=BIGINT},
        attachment_name = #{record.attachmentName,jdbcType=VARCHAR},
        attachment_path = #{record.attachmentPath,jdbcType=VARCHAR},
        attachment_size = #{record.attachmentSize,jdbcType=DECIMAL},
        complaint_id = #{record.complaintId,jdbcType=BIGINT},
        complaint_type = #{record.complaintType,jdbcType=TINYINT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.website.pojo.ComplaintAttachment">
        update complaint_attachment
        <set>
            <if test="attachmentName != null">
                attachment_name = #{attachmentName,jdbcType=VARCHAR},
            </if>
            <if test="attachmentPath != null">
                attachment_path = #{attachmentPath,jdbcType=VARCHAR},
            </if>
            <if test="attachmentSize != null">
                attachment_size = #{attachmentSize,jdbcType=DECIMAL},
            </if>
            <if test="complaintId != null">
                complaint_id = #{complaintId,jdbcType=BIGINT},
            </if>
            <if test="complaintType != null">
                complaint_type = #{complaintType,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.website.pojo.ComplaintAttachment">
    update complaint_attachment
    set attachment_name = #{attachmentName,jdbcType=VARCHAR},
      attachment_path = #{attachmentPath,jdbcType=VARCHAR},
      attachment_size = #{attachmentSize,jdbcType=DECIMAL},
      complaint_id = #{complaintId,jdbcType=BIGINT},
      complaint_type = #{complaintType,jdbcType=TINYINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>