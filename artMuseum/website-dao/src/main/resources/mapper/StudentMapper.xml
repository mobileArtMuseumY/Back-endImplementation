<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.website.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="com.website.pojo.Student">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="student_id" jdbcType="VARCHAR" property="studentId"/>
        <result column="login_name" jdbcType="VARCHAR" property="loginName"/>
        <result column="hashed_pwd" jdbcType="VARCHAR" property="hashedPwd"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="sex" jdbcType="CHAR" property="sex"/>
        <result column="bank_account" jdbcType="VARCHAR" property="bankAccount"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="introduction" jdbcType="VARCHAR" property="introduction"/>
        <result column="transaction_time" jdbcType="INTEGER" property="transactionTime"/>
        <result column="break_time" jdbcType="INTEGER" property="breakTime"/>
        <result column="login_time" jdbcType="TIMESTAMP" property="loginTime"/>
        <result column="is_verified" jdbcType="TINYINT" property="isVerified"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="follower_count" jdbcType="INTEGER" property="followerCount"/>
        <result column="skill" jdbcType="OTHER" property="skill"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, student_id, login_name, hashed_pwd, salt, avatar, sex, bank_account, tel, email, 
    introduction, transaction_time, break_time, login_time, is_verified, gmt_create, 
    gmt_modified, follower_count, skill
  </sql>
    <select id="selectByExample" parameterType="com.website.pojo.StudentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.website.pojo.StudentExample">
        delete from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.website.pojo.Student">
    insert into student (id, student_id, login_name, 
      hashed_pwd, salt, avatar, 
      sex, bank_account, tel, 
      email, introduction, transaction_time, 
      break_time, login_time, is_verified, 
      gmt_create, gmt_modified, follower_count, 
      skill)
    values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{hashedPwd,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{bankAccount,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, #{transactionTime,jdbcType=INTEGER}, 
      #{breakTime,jdbcType=INTEGER}, #{loginTime,jdbcType=TIMESTAMP}, #{isVerified,jdbcType=TINYINT}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{followerCount,jdbcType=INTEGER}, 
      #{skill,jdbcType=OTHER})
  </insert>
    <insert id="insertSelective" parameterType="com.website.pojo.Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="loginName != null">
                login_name,
            </if>
            <if test="hashedPwd != null">
                hashed_pwd,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="bankAccount != null">
                bank_account,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
            <if test="transactionTime != null">
                transaction_time,
            </if>
            <if test="breakTime != null">
                break_time,
            </if>
            <if test="loginTime != null">
                login_time,
            </if>
            <if test="isVerified != null">
                is_verified,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="followerCount != null">
                follower_count,
            </if>
            <if test="skill != null">
                skill,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="hashedPwd != null">
                #{hashedPwd,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="bankAccount != null">
                #{bankAccount,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null">
                #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="transactionTime != null">
                #{transactionTime,jdbcType=INTEGER},
            </if>
            <if test="breakTime != null">
                #{breakTime,jdbcType=INTEGER},
            </if>
            <if test="loginTime != null">
                #{loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isVerified != null">
                #{isVerified,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="followerCount != null">
                #{followerCount,jdbcType=INTEGER},
            </if>
            <if test="skill != null">
                #{skill,jdbcType=OTHER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.website.pojo.StudentExample" resultType="java.lang.Long">
        select count(*) from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update student
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.studentId != null">
                student_id = #{record.studentId,jdbcType=VARCHAR},
            </if>
            <if test="record.loginName != null">
                login_name = #{record.loginName,jdbcType=VARCHAR},
            </if>
            <if test="record.hashedPwd != null">
                hashed_pwd = #{record.hashedPwd,jdbcType=VARCHAR},
            </if>
            <if test="record.salt != null">
                salt = #{record.salt,jdbcType=VARCHAR},
            </if>
            <if test="record.avatar != null">
                avatar = #{record.avatar,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=CHAR},
            </if>
            <if test="record.bankAccount != null">
                bank_account = #{record.bankAccount,jdbcType=VARCHAR},
            </if>
            <if test="record.tel != null">
                tel = #{record.tel,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.introduction != null">
                introduction = #{record.introduction,jdbcType=VARCHAR},
            </if>
            <if test="record.transactionTime != null">
                transaction_time = #{record.transactionTime,jdbcType=INTEGER},
            </if>
            <if test="record.breakTime != null">
                break_time = #{record.breakTime,jdbcType=INTEGER},
            </if>
            <if test="record.loginTime != null">
                login_time = #{record.loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isVerified != null">
                is_verified = #{record.isVerified,jdbcType=TINYINT},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.followerCount != null">
                follower_count = #{record.followerCount,jdbcType=INTEGER},
            </if>
            <if test="record.skill != null">
                skill = #{record.skill,jdbcType=OTHER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update student
        set id = #{record.id,jdbcType=BIGINT},
        student_id = #{record.studentId,jdbcType=VARCHAR},
        login_name = #{record.loginName,jdbcType=VARCHAR},
        hashed_pwd = #{record.hashedPwd,jdbcType=VARCHAR},
        salt = #{record.salt,jdbcType=VARCHAR},
        avatar = #{record.avatar,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=CHAR},
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
        tel = #{record.tel,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        introduction = #{record.introduction,jdbcType=VARCHAR},
        transaction_time = #{record.transactionTime,jdbcType=INTEGER},
        break_time = #{record.breakTime,jdbcType=INTEGER},
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
        is_verified = #{record.isVerified,jdbcType=TINYINT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        follower_count = #{record.followerCount,jdbcType=INTEGER},
        skill = #{record.skill,jdbcType=OTHER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.website.pojo.Student">
        update student
        <set>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="hashedPwd != null">
                hashed_pwd = #{hashedPwd,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="bankAccount != null">
                bank_account = #{bankAccount,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null">
                introduction = #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="transactionTime != null">
                transaction_time = #{transactionTime,jdbcType=INTEGER},
            </if>
            <if test="breakTime != null">
                break_time = #{breakTime,jdbcType=INTEGER},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isVerified != null">
                is_verified = #{isVerified,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="followerCount != null">
                follower_count = #{followerCount,jdbcType=INTEGER},
            </if>
            <if test="skill != null">
                skill = #{skill,jdbcType=OTHER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.website.pojo.Student">
    update student
    set student_id = #{studentId,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      hashed_pwd = #{hashedPwd,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      transaction_time = #{transactionTime,jdbcType=INTEGER},
      break_time = #{breakTime,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      is_verified = #{isVerified,jdbcType=TINYINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      follower_count = #{followerCount,jdbcType=INTEGER},
      skill = #{skill,jdbcType=OTHER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>